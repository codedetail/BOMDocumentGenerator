# -*- coding: utf-8; -*-
#
# This file is part of BOM Document Generator Tool.
#
# This tool is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# MMC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
#The MIT License (MIT)

#Copyright (c) 2014 firepick

# (c) 2014 firepick-delta, http://delta.firepick.org/
# Author: David Shanklin, http://www.sagesmithing.org

#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:

#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.

#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

# These utilities are used to support GitHub Flavored Markdown (GFM for short)

import BOMUtilities
import MarkdownUtilities
#import CubifyDesignXMLParser
import re
from xml.etree.ElementTree import Element, SubElement, Comment
from xml.etree import ElementTree

s = "<!--0.1 end auto-generation-->"

# extract 

v = BOMUtilities.IsAutoGeneratedMarkdownEndCommentTag(s)

print(s)
print(v)

# extract Markdown comment tag for item
s = "<!--0.1,part,ABC1,1411121,active-->"
v = BOMUtilities.ExtractMarkdownCommentTagForItem(s)

print(s)
print(v)

# Paragraphs

s = "This world and a rooster tail"
p = MarkdownUtilities.Paragraphs(s,0)

print(s)
print(p)

# Headers

s = 'The Great Gatsby'
h = MarkdownUtilities.Header(s,2)

print(s)
print(h)


TEST_TEXT =  '# Hello World!\n'

# add header to existing markdown file
#BOMUtilities.AddNewMarkdownAutoGeneratedSection('X5CT.md',TEST_TEXT)

def HelloWorld():
    print("Hello World!")

HelloWorld()


#line = "AFPD0001 - FirePick Delta Hacker-Developer Edition_Config&lt;1&gt;_1"
line = "AFPD0001 - FirePick Delta Hacker-Developer Edition_Config<1>_1"
#line = "Cats are smarter than dogs";

searchObj = re.search( r'(.*) - (.*)_Config<([0-9]*?)>_([0-9]*)', line, re.M|re.I)

if searchObj:
   print "searchObj.group() : ", searchObj.group()
   print "searchObj.group(1) : ", searchObj.group(1)
   print "searchObj.group(2) : ", searchObj.group(2)
   print "sezarchObj.group(3) : ", searchObj.group(3)
   print "searchObj.group(4) : ", searchObj.group(4)
else:
    searchObj = re.search( r'(.*) - (.*)<([0-9]*?)>_([0-9]*)', line, re.M|re.I)

    if searchObj:
       print "searchObj.group() : ", searchObj.group()
       print "searchObj.group(1) : ", searchObj.group(1)
       print "searchObj.group(2) : ", searchObj.group(2)
       print "sezarchObj.group(3) : ", searchObj.group(3)
       print "searchObj.group(4) : ", searchObj.group(4)

root = ElementTree.parse('AFPD0001_Cubify.XML')
for child in root.findall('.//Node'):
    print child.tag, child.attrib

#CubifyDesignXMLParser.buildOutputTree()
print()

